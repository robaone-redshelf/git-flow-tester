name: GitFlow Workflow

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - develop
      - main
      - release/*
      - hotfix/*

env:
  WORKFLOW_VERSION: 1.0.0
jobs:
  initialize:
    uses: VirdocsSoftware/github-actions/.github/workflows/initialize.yml@main
    permissions:
      actions: write
      contents: read
    secrets:
      env-github-token: ${{ secrets.GITHUB_TOKEN }}
  pr-hygiene:
    if: |
      github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read
    uses: VirdocsSoftware/github-actions/.github/workflows/validate-pr.yml@feat/CORE-1611-PR-hygiene-check-workflow
    with:
      pr_title: ${{ github.event.pull_request.title }}
      pr_branch: ${{ github.event.pull_request.head.ref }}
      target_branch: ${{ github.base_ref }}
  unit-tests:
    name: Unit Tests
    needs: [initialize]
    if: |
      ! ( github.event_name == 'push' &&
      github.ref == 'refs/heads/main' )
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install
      - name: Run Unit Tests
        run: npm run test

  feature-tests:
    name: Feature Tests
    needs: [initialize]
    runs-on: ubuntu-latest
    if: |
      ! ( github.event_name == 'push' &&
      github.ref == 'refs/heads/main' )
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

  deploy-check:
    name: Deployment Check
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: |
      ! contains(github.event.pull_request.body, '[x] Skip CD')
    steps:
      - name: Announce Deployment
        run: echo "This will be deployed"

  check-release:
    name: Check Release
    if: |
      startsWith(github.head_ref,'release/v') || startsWith(github.head_ref,'hotfix/v') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    uses: VirdocsSoftware/github-actions/.github/workflows/check-release.yml@main
    permissions:
      contents: read
    with:
      head-ref: ${{ github.head_ref }}
      base-ref: ${{ github.base_ref }}
      event-name: ${{ github.event_name }}

  semantic-pre-release:
    name: Semantic Pre Release
    needs: [deploy-check, unit-tests, feature-tests, initialize]
    permissions:
      contents: write
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/develop'
    uses: VirdocsSoftware/github-actions/.github/workflows/semantic-pre-release.yml@main
    secrets:
      semantic-github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-develop:
    name: Deploy to Develop
    needs: [deploy-check, unit-tests, feature-tests, initialize]
    environment: develop
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4

  integration-testing:
    name: Integration Testing
    needs: [deploy-to-develop, initialize]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

  deploy-to-staging:
    name: Deploy to Staging
    needs: [deploy-check, unit-tests, feature-tests, check-release, initialize]
    environment: staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'pull_request' && github.base_ref == 'main' &&
      (startsWith(github.head_ref, 'release/v') || startsWith(github.head_ref, 'hotfix/v'))
    steps:
      - uses: actions/checkout@v4

  tag-jira-release:
    needs: [deploy-to-develop]
    uses: VirdocsSoftware/github-actions/.github/workflows/tag-tickets-with-release.yml@main
    with:
      target-branch: 'origin/main'
      jira-domain: ${{ vars.JIRA_DOMAIN }}
    secrets:
      jira-username: ${{ vars.JIRA_USERNAME }}
      jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
      llm-api-token: ${{ secrets.LLM_TOKEN }}
      

  tag-jira-relesae-or-hotfix:
    needs: [deploy-to-staging]
    uses: VirdocsSoftware/github-actions/.github/workflows/tag-tickets-with-release.yml@main
    with:
      target-branch: 'origin/main'
      jira-domain: ${{ vars.JIRA_DOMAIN }}
      is-release: true
    secrets:
      jira-username: ${{ vars.JIRA_USERNAME }}
      jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
      llm-api-token: ${{ secrets.LLM_TOKEN }}

  deploy-to-production:
    name: Deploy to Production
    needs: [deploy-check, check-release, initialize]
    environment: production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

  semantic-release:
    name: Semantic Release
    permissions:
      contents: write
    needs: [deploy-to-production]
    uses: VirdocsSoftware/github-actions/.github/workflows/semantic-release.yml@main
    secrets:
      semantic-github-token: ${{ secrets.GITHUB_TOKEN }}

  notify-release:
    name: Notify Release
    needs: [deploy-to-production, semantic-release]
    uses: VirdocsSoftware/github-actions/.github/workflows/release-notes.yml@main
    with:
      parent-page-id: ${{ vars.PARENT_PAGE_ID }}
      jira-domain: ${{ vars.JIRA_DOMAIN }}
    secrets:
      jira-username: ${{ vars.JIRA_USERNAME }}
      jira-api-token: ${{ secrets.JIRA_API_TOKEN }}